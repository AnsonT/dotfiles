unameOut="$(uname -s)"
case "${unameOut}" in
    Linux*)     machine=Linux;;
    Darwin*)    machine=Mac;;
    CYGWIN*)    machine=Cygwin;;
    MINGW*)     machine=MinGw;;
    *)          machine="UNKNOWN:${unameOut}"
esac

function list_newest() {
  _v=$(unbuffer exa -l -s modified -r | head -20)
  echo "$_v"
}

function find_dir() {
  find $1 -type d -name $2 -prune
}

if [ $machine = 'Mac' ]
  then
    # Test for running under Parallels
    if system_profiler SPHardwareDataType | grep --quiet Parallels
      then
        alias code='function __code() { code $* --disable-gpu; unset -f __code; }; __code'
    fi
fi

alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME'
alias cat="bat -p"
alias ls="exa"
alias lst=list_newest
alias ..='cd ../'                           # Go back 1 directory level
alias ...='cd ../../'                       # Go back 2 directory levels
alias .3='cd ../../../'                     # Go back 3 directory levels
alias .4='cd ../../../../'                  # Go back 4 directory levels
alias .5='cd ../../../../../'               # Go back 5 directory levels
alias .6='cd ../../../../../../'            # Go back 6 directory levels
mcd () { mkdir -p "$1" && cd "$1"; }        # mcd:          Makes new Dir and jumps inside

alias f='ag'      # find text
alias ff='ag -g'  # find file
alias fd=find_dir # find directory: fd {start_dir} {name_pattern}

alias typora='open -a typora'
